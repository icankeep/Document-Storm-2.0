<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.docstorm.documentstormcommon.mapper.FileInfoDao">
  <resultMap id="BaseResultMap" type="top.docstorm.documentstormcommon.domain.FileInfo">
    <id column="file_id" jdbcType="INTEGER" property="fileId" />
    <result column="file_key" jdbcType="VARCHAR" property="fileKey" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_last_time" jdbcType="TIMESTAMP" property="updateLastTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="file_status" jdbcType="TINYINT" property="fileStatus" />
    <result column="file_format_change_type" jdbcType="TINYINT" property="fileFormatChangeType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    file_id, file_key, file_name, create_time, update_last_time, user_id, file_status, 
    file_format_change_type
  </sql>
  <select id="selectByExample" parameterType="top.docstorm.documentstormcommon.domain.FileInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from file_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from file_info
    where file_id = #{fileId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from file_info
    where file_id = #{fileId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.docstorm.documentstormcommon.domain.FileInfoExample">
    delete from file_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="file_id" keyProperty="fileId" parameterType="top.docstorm.documentstormcommon.domain.FileInfo" useGeneratedKeys="true">
    insert into file_info (file_key, file_name, create_time, 
      update_last_time, user_id, file_status, 
      file_format_change_type)
    values (#{fileKey,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateLastTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, #{fileStatus,jdbcType=TINYINT}, 
      #{fileFormatChangeType,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyColumn="file_id" keyProperty="fileId" parameterType="top.docstorm.documentstormcommon.domain.FileInfo" useGeneratedKeys="true">
    insert into file_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileKey != null">
        file_key,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateLastTime != null">
        update_last_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="fileStatus != null">
        file_status,
      </if>
      <if test="fileFormatChangeType != null">
        file_format_change_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileKey != null">
        #{fileKey,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateLastTime != null">
        #{updateLastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="fileStatus != null">
        #{fileStatus,jdbcType=TINYINT},
      </if>
      <if test="fileFormatChangeType != null">
        #{fileFormatChangeType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.docstorm.documentstormcommon.domain.FileInfoExample" resultType="java.lang.Long">
    select count(*) from file_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update file_info
    <set>
      <if test="record.fileId != null">
        file_id = #{record.fileId,jdbcType=INTEGER},
      </if>
      <if test="record.fileKey != null">
        file_key = #{record.fileKey,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateLastTime != null">
        update_last_time = #{record.updateLastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.fileStatus != null">
        file_status = #{record.fileStatus,jdbcType=TINYINT},
      </if>
      <if test="record.fileFormatChangeType != null">
        file_format_change_type = #{record.fileFormatChangeType,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update file_info
    set file_id = #{record.fileId,jdbcType=INTEGER},
      file_key = #{record.fileKey,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_last_time = #{record.updateLastTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER},
      file_status = #{record.fileStatus,jdbcType=TINYINT},
      file_format_change_type = #{record.fileFormatChangeType,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.docstorm.documentstormcommon.domain.FileInfo">
    update file_info
    <set>
      <if test="fileKey != null">
        file_key = #{fileKey,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateLastTime != null">
        update_last_time = #{updateLastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="fileStatus != null">
        file_status = #{fileStatus,jdbcType=TINYINT},
      </if>
      <if test="fileFormatChangeType != null">
        file_format_change_type = #{fileFormatChangeType,jdbcType=TINYINT},
      </if>
    </set>
    where file_id = #{fileId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.docstorm.documentstormcommon.domain.FileInfo">
    update file_info
    set file_key = #{fileKey,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_last_time = #{updateLastTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      file_status = #{fileStatus,jdbcType=TINYINT},
      file_format_change_type = #{fileFormatChangeType,jdbcType=TINYINT}
    where file_id = #{fileId,jdbcType=INTEGER}
  </update>
</mapper>